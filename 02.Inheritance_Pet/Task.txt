Create next classes: Cat, Dog and Petshop.
Types Cat and Dog have fields Name and Breed and method Introduce() which prints text “I’m (Name) of (Breed). I’m a cat (or dog)”.
The class Petshop collects in its container different pets.
We may add new pet to container by method AddPet() and we may display information about all pets by method IntroduceAll().
Which hierarchy of classes is the best solution of this problem?
Write short code to demonstrate your solution. Your code should include class (interface) aggregation, inheritance, should use .NET BCL collections or generics, should implement exception handling.

The best solution of this problem is as following:
1/ Create abstract class Pet inherited from IPet interface with the following members to be implemented
in the Pet class:
-- string Name{get;set;}
-- string Breed{get;set;}
-- void Display();
2/ 2 classes are inherited from abstract Pet class with 2 parameters(string name, string breed) 
in their constructors to be passed with keyword base() to parent Pet;
3/ Class manager Petshop aggregates List<Pet> collection of instances from base class Pet;
4/ Class Petshop implement iterface IPetshop;